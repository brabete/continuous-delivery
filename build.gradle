plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.liquibase.gradle' version '2.0.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'

defaultTasks "bootRun"

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springBootAdminVersion', "2.1.5")
    set('springCloudVersion', "Greenwich.SR2")
}

test {
    useJUnitPlatform()
    description = "Execute Unit Tests"
    exclude "**/*IT*", "**/*IntTest*", "**/*CucumberIT*"
    testLogging {
        events 'FAILED', 'SKIPPED', 'PASSED'
    }

    reports.html.enabled = false
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    description = "Execute Integration Tests"
    group = "verification"
    include "**/*IT*", "**/*IntTest*"
    exclude "**/*CucumberIT*"

    testLogging {
        events 'FAILED', 'SKIPPED'
    }

    reports.html.enabled = false
}

check.dependsOn integrationTest

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn test
}

task integrationTestReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn integrationTest
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'de.codecentric:spring-boot-admin-starter-client'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.postgresql:postgresql'
    implementation 'com.h2database:h2'
    implementation 'org.zalando:problem-spring-web:0.24.0'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.hibernate:hibernate-envers'
    implementation 'org.liquibase:liquibase-core'
    liquibaseRuntime 'org.liquibase:liquibase-core'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:${liquibase_hibernate5_version}'
    liquibaseRuntime sourceSets.main.compileClasspath
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude module: "junit"
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
    testImplementation 'junit:junit'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.mockito:mockito-core"
    testImplementation 'com.github.tomakehurst:wiremock:2.24.1'
    testImplementation 'io.cucumber:cucumber-junit:4.7.1'
    testImplementation 'io.cucumber:cucumber-spring:4.7.1'
    testImplementation 'com.h2database:h2'
    testImplementation 'au.com.dius:pact-jvm-consumer-junit_2.11:3.5.24'
    testCompile 'org.testcontainers:postgresql'
    testCompile 'io.rest-assured:rest-assured:3.1.0'
    liquibaseRuntime 'com.h2database:h2'
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom 'org.testcontainers:testcontainers-bom:1.11.2'
    }
}
